/* Tree View Styles */

.dotn_view {
    user-select: none;
    color: var(--dotn_color-text-clickable);
    font-size: var(--dotn_font-size);
    display: flex;
    flex-direction: column;
    height: 100%;
    padding: 0 !important;
    overflow: hidden;
    position: relative;
    /* Create positioning context for the entire view */

    .dotn_view-header {
        display: flex;
        gap: var(--dotn_gap);
        border-bottom: 1px solid var(--dotn_border-color);
        flex-shrink: 0;
        position: sticky;
        top: 0;
        z-index: 10;
    }

    .dotn_spacer {
        flex-grow: 1;
    }

    .dotn_view-body {
        flex-grow: 1;
        overflow-y: auto;
        overflow-x: auto;
        /* Allow horizontal scrolling */
        position: relative;
        /* Create positioning context for sticky elements */
        scroll-behavior: smooth;
        /* smooth programmatic scrolls */

        /* Improve scrollbar behavior on macOS */
        -webkit-overflow-scrolling: touch;
        scrollbar-width: thin;
        /* For Firefox */

        /* Hide scrollbars on macOS when not in use */
        &::-webkit-scrollbar {
            width: 8px;
            height: 8px;
            background-color: transparent;
        }

        &::-webkit-scrollbar-thumb {
            background-color: var(--scrollbar-thumb-bg);
            border-radius: 4px;
        }

        &::-webkit-scrollbar-track {
            background-color: transparent;
        }
    }

    .dotn_view-header,
    .dotn_view-tree {
        padding: var(--dotn_view-padding);
        min-width: fit-content;
    }

    .dotn_view-tree {
        padding-left: 0;
        padding-right: 0;
    }

    .dotn_tree-item-container {
        display: flex;
        flex-direction: column;
        position: relative;
        /* Create positioning context for descendants */
    }

    .dotn_tree-item-self {
        display: flex;
        /* width: max-content; - Removed to allow JavaScript width control */
        min-width: 100%;
        /* Ensure it's at least as wide as the parent */
        gap: var(--dotn_gap);
        position: relative;
        /* For positioning the action buttons */
        margin-bottom: var(--dotn_gap);
    }

    .dotn_tree-item-title {
        flex: 1 1 auto;
        min-width: 0;
        /* allow flex item to shrink and fill */
        display: flex;
        gap: var(--dotn_gap);
        height: var(--dotn_button-size);
        /* constant row content height */
        line-height: var(--dotn_button-size);
        white-space: nowrap;
        padding: 0 0.5rem;
        /* Default: no extra margin; context rules below add it when needed */
        margin-left: 0;
        border-radius: var(--dotn_border-radius);
        background-color: var(--dotn_bg-hover);
        color: var(--dotn_color-text-hover);
    }

    .dotn_tree-item-title[data-node-kind="folder"] {
        padding-left: 0;
    }

    .dotn_tree-item-title[data-node-kind="folder"],
    .dotn_tree-item-title[data-node-kind="virtual"] {
        background-color: unset;
    }

    /* Schema-suggested virtual nodes styling */
    .dotn_tree-item-title[data-node-kind="suggestion"] {
        border: 1px dashed var(--dotn_accent-color);
        color: var(--dotn_accent-color);
        background-color: unset;
    }

    /* YAML custom title styles */
    .yaml-filename {
        color: inherit;
        opacity: 0.4;
        font-style: italic;
    }

    .dotn_extension {
        line-height: var(--dotn_button-size);
        text-transform: uppercase;
        color: var(--dotn_text-faint);
        font-size: var(--dotn_font-size-small);
        padding: 0 0.2rem;
    }

    /* Children */
    .dotn_tree-item-children {
        padding-left: calc(var(--dotn_gap) + var(--dotn_button-size) / 2);
        margin-left: calc((var(--dotn_button-size) / 2));
        position: relative;
    }

    /* Create a shorter border line using a pseudo-element */
    .dotn_tree-item-children::after {
        content: '';
        position: absolute;
        left: -1px;
        top: var(--dotn_gap);
        bottom: var(--dotn_gap);
        width: 1px;
        background-color: var(--dotn_border-color);
    }

    /* Highlight for the last collapsed toggle arrow */
    .dotn_button-icon[data-action="toggle"].dotn_last-collapsed {
        border: 2px solid var(--dotn_accent-color);
        border-radius: var(--dotn_border-radius);
    }

    .dotn_tree-item-container.is-collapsed>.dotn_tree-item-children {
        display: none;
    }

    /* Icons */
    .dotn_icon,
    .dotn_button-icon {
        display: flex;
        justify-content: center;
        align-items: center;
        flex-shrink: 0;
        /* Prevent icons from shrinking */
    }

    /* Action buttons container */
    .dotn_action-buttons-container {
        position: sticky;
        top: 0;
        right: var(--dotn_view-padding);
        display: flex;
        gap: var(--dotn_gap);
        z-index: 5;
        /* Keep above text, but let highlight extend underneath */
        background-color: transparent;
        box-shadow: none;
        margin-left: var(--dotn_gap);
    }

    /* Remove the extra overlay that clipped highlight */

    .dotn_icon svg,
    .dotn_button-icon svg {
        width: var(--dotn_button-icon-size);
        height: var(--dotn_button-icon-size);
        display: block;
        /* fix baseline offset to center icons vertically */
    }

    svg.right-triangle {
        width: 10px;
        height: 10px;
        stroke-width: 4px;
    }

    .is-collapsed svg.right-triangle:first-of-type {
        transform: rotate(-90deg);
    }

    /* Also rotate when virtual list marks row as collapsed */
    .tree-row.collapsed .right-triangle {
        transform: rotate(-90deg);
    }

    .rotate-180deg svg {
        transform: rotate(180deg);
    }

    .dotn_icon[data-icon-name="folder"] {
        margin-right: 0;
        /* keep icon from overlapping the toggle */
    }

    /* Ensure icons reserve consistent space and align with row height */
    .dotn_icon,
    .dotn_file-badge {
        min-width: var(--dotn_button-size);
        height: var(--dotn_button-size);
        box-sizing: border-box;
    }

    /* Badge for unknown file extensions shown in place of an icon */
    .dotn_file-badge {
        display: inline-flex;
        align-items: center;
        justify-content: center;
        font-size: var(--dotn_font-size-small);
        color: var(--dotn_text-faint);
        background-color: var(--dotn_bg-clickable);
        border-radius: var(--dotn_border-radius);
        text-transform: uppercase;
        padding: 0 4px;
    }

    /* Extension badge inline with title text */
    .dotn_extension-badge {
        display: inline-block;
        font-size: 0.7rem;
        background-color: var(--dotn_bg);
        color: var(--dotn_color-text-hover);
        border-radius: 3px;
        padding: 1px 4px;
        margin-left: var(--dotn_gap);
        text-transform: uppercase;
        line-height: 1.2;
        white-space: nowrap;
        align-self: center;
        border: 1px solid var(--dotn_border-color);
    }

    /* Even spacing between toggle ⇄ icon ⇄ title in both renderers */
    .dotn_tree-item-self .dotn_button-icon+.dotn_icon,
    .dotn_tree-item-self .dotn_button-icon+.dotn_file-badge,
    .tree-row .dotn_button-icon+.dotn_icon,
    .tree-row .dotn_button-icon+.dotn_file-badge {
        margin-left: var(--dotn_gap);
    }

    /* When there is no icon/badge, keep some space between toggle/indent and title */
    .dotn_tree-item-self .dotn_icon,
    .dotn_tree-item-self .dotn_file-badge,
    .tree-row .dotn_icon,
    .tree-row .dotn_file-badge {
        margin-right: var(--dotn_gap);
    }

    /* Buttons */
    .dotn_button-icon {
        cursor: pointer;
        color: var(--dotn_color-text-clickable);
        min-width: var(--dotn_button-size);
        height: var(--dotn_button-size);
        line-height: var(--dotn_button-size);
        border-radius: var(--dotn_border-radius);
        background-color: var(--dotn_bg-hover);
        position: relative;
    }

    .dotn_button-icon[data-action="toggle"] {
        margin-right: var(--dotn_gap);
    }

    .is-clickable {
        cursor: pointer;
    }

    .dotn_action-buttons-container>.dotn_button-icon::before {
        content: "";
        background-color: var(--dotn_bg);
        width: calc(var(--dotn_button-size) + var(--dotn_gap) + var(--dotn_view-padding));
        height: 100%;
        position: absolute;
        z-index: -1;
        left: calc(-1 * var(--dotn_gap));
    }

    .dotn_button-icon:hover,
    .is-clickable:hover {
        color: var(--dotn_color-text-hover);
    }

    /* Style for the currently active file */
    .dotn_tree-item-title.is-active,
    .dotn_tree-item-title.is-active:hover {
        color: var(--dotn_text-on-accent);
        background-color: var(--dotn_accent-color);
    }
}
